# DO NOT EDIT! Generated by protoc-gen-graphql.

type ImageAnnotator_Query {
  """
  Note: to fetch the latest available report use "latest" as report id.
  """
  getImageAnalysis(input: GetImageAnalysisRequestInput!): ImageAnalysis!
  listImageAnalyses(input: ListImageAnalysesRequestInput!): ListImageAnalysesResponse!
  getImageAnnotation(input: GetImageAnnotationRequestInput!): ImageAnnotation!
  listImageAnnotations(input: ListImageAnnotationsRequestInput!): ListImageAnnotationsResponse!
}

type ImageAnnotator_Mutation {
  analyzeImage(input: AnalyzeImageRequestInput!): AnalyzeImageResponse!
  deleteImageAnalysis(input: DeleteImageAnalysisRequestInput!): Boolean!
  createImageAnnotation(input: CreateImageAnnotationRequestInput!): ImageAnnotation!
  updateImageAnnotation(input: UpdateImageAnnotationRequestInput!): ImageAnnotation!
  deleteImageAnnotation(input: DeleteImageAnnotationRequestInput!): Boolean!
}

"""
TODO: add information about the model used and whether the analysis is STABLE
TODO: or EXPERIMENTAL. NOTE: Latest should return the latest STABLE analysis.
"""
type ImageAnalysis {
  """
  The name of the image analysis.
  """
  name: String!
  """
  The (immutable) properties of the image.
  """
  properties: ImageProperties
  """
  The annotations of the image.
  """
  annotations: ImageAnnotations
  """
  The creation time indicating when this revision was created.
  """
  createTime: DateTime
}

type ImageAnnotation {
  """
  The annotation resource name.
  """
  name: String!
  """
  The annotated image.
  """
  resource: String!
  """
  The annotations of the image.
  """
  annotations: ImageAnnotations
  """
  The timestamp at which the annotation was created.
  """
  createTime: DateTime
  """
  The latest timestamp at which the annotation was updated.
  """
  updateTime: DateTime
}

input ImageAnnotationInput {
  """
  The annotation resource name.
  """
  name: String
  """
  The annotated image.
  """
  resource: String
  """
  The annotations of the image.
  """
  annotations: ImageAnnotationsInput
}

input AnalyzeImageRequestInput {
  """
  The parent image to be analyzed.
  """
  parent: String!
  """
  A list of features to analyze.
  """
  features: [String!]
}

type AnalyzeImageResponse {
  """
  The analysis of the image.
  """
  analysis: ImageAnalysis
}

input ListImageAnalysesRequestInput {
  """
  The parent image to list analyses from.
  """
  parent: String!
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
}

type ListImageAnalysesResponse {
  """
  The list of image analyses.
  """
  analyses: [ImageAnalysis!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input GetImageAnalysisRequestInput {
  """
  The name of the image analysis to retrieve.
  """
  name: String
  """
  FieldMask that represents which fields should be retrieved.
  """
  fieldMask: FieldMaskInput
}

input DeleteImageAnalysisRequestInput {
  """
  The name of the analysis to delete.
  """
  name: String
}

input CreateImageAnnotationRequestInput {
  """
  The parent this image annotation belongs to.
  """
  parent: String
  """
  The image annotation to create.
  """
  annotation: ImageAnnotationInput
}

input ListImageAnnotationsRequestInput {
  """
  The parent, which owns this collection of image annotations.
  """
  parent: String!
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.

  Currently accepted filters include:
  - resource:{full resource name}
  """
  filter: String
}

type ListImageAnnotationsResponse {
  """
  The list of image annotations.
  """
  annotations: [ImageAnnotation!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input GetImageAnnotationRequestInput {
  """
  The name of the image annotation to retrieve.
  """
  name: String
}

input UpdateImageAnnotationRequestInput {
  """
  The image annotation to update.
  """
  annotation: ImageAnnotationInput
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeleteImageAnnotationRequestInput {
  """
  The image annotation to delete.
  """
  name: String
}
