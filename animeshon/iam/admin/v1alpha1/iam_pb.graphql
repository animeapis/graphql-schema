# DO NOT EDIT! Generated by protoc-gen-graphql.

type IAM_Query {
  getServiceAccount(input: GetServiceAccountRequestInput!): ServiceAccount!
  listServiceAccounts(input: ListServiceAccountsRequestInput!): ListServiceAccountsResponse!
  getRole(input: GetRoleRequestInput!): Role!
  listRoles(input: ListRolesRequestInput!): ListRolesResponse!
  getPermission(input: GetPermissionRequestInput!): Permission!
  listPermissions(input: ListPermissionsRequestInput!): ListPermissionsResponse!
}

type IAM_Mutation {
  createServiceAccount(input: CreateServiceAccountRequestInput!): ServiceAccount!
  updateServiceAccount(input: UpdateServiceAccountRequestInput!): ServiceAccount!
  deleteServiceAccount(input: DeleteServiceAccountRequestInput!): Boolean!
  createRole(input: CreateRoleRequestInput!): Role!
  updateRole(input: UpdateRoleRequestInput!): Role!
  deleteRole(input: DeleteRoleRequestInput!): Boolean!
  createPermission(input: CreatePermissionRequestInput!): Permission!
  updatePermission(input: UpdatePermissionRequestInput!): Permission!
  deletePermission(input: DeletePermissionRequestInput!): Boolean!
}

type ServiceAccount {
  """
  The name of the service account.
  """
  name: String!
  """
  The unique, stable numeric ID for the service account.
  """
  uid: String!
  """
  The display name of this service account.
  """
  displayName: String!
  """
  A brief description of what this service account is used for.
  """
  description: String!
  """
  OAuth2 client ID to use for the authentication flow.
  """
  oauth2ClientId: String!
  """
  OAuth2 client secret to use for the authentication flow.
  """
  oauth2ClientSecret: String!
}

input ServiceAccountInput {
  """
  The name of the service account.
  """
  name: String!
  """
  The display name of this service account.
  """
  displayName: String
  """
  A brief description of what this service account is used for.
  """
  description: String
}

type Role {
  """
  The name of the role.
  """
  name: String!
  """
  The display name of this role.
  """
  displayName: String!
  """
  A brief description of what this role is used for.
  """
  description: String!
  """
  The names of the permissions this role grants when bound in an IAM policy.
  """
  includedPermissions: [String!]!
  """
  Used to perform a consistent read-modify-write.
  """
  etag: String!
}

input RoleInput {
  """
  The name of the role.
  """
  name: String
  """
  The display name of this role.
  """
  displayName: String
  """
  A brief description of what this role is used for.
  """
  description: String
  """
  The names of the permissions this role grants when bound in an IAM policy.
  """
  includedPermissions: [String!]
  """
  Used to perform a consistent read-modify-write.
  """
  etag: String
}

type Permission {
  """
  The name of this permission.
  """
  name: String!
  """
  The display name of this permission.
  """
  displayName: String!
  """
  A brief description of what this permission is used for.
  """
  description: String!
}

input PermissionInput {
  """
  The name of this permission.
  """
  name: String
  """
  The display name of this permission.
  """
  displayName: String
  """
  A brief description of what this permission is used for.
  """
  description: String
}

input GetServiceAccountRequestInput {
  """
  The name of the service account to retrieve.
  """
  name: String!
}

input ListServiceAccountsRequestInput {
  """
  The parent, which owns this collection of service accounts.
  """
  parent: String!
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type ListServiceAccountsResponse {
  """
  The list of service accounts.
  """
  serviceAccounts: [ServiceAccount!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input CreateServiceAccountRequestInput {
  """
  The service account to create.
  """
  serviceAccount: ServiceAccountInput!
}

input UpdateServiceAccountRequestInput {
  """
  The service account to update.
  """
  serviceAccount: ServiceAccountInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeleteServiceAccountRequestInput {
  """
  The name of the service account to delete.
  """
  name: String!
}

input GetRoleRequestInput {
  """
  The name of the role to retrieve.
  """
  name: String!
}

input ListRolesRequestInput {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type ListRolesResponse {
  """
  The list of roles.
  """
  roles: [Role!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input CreateRoleRequestInput {
  """
  The role to create.
  """
  role: RoleInput!
}

input UpdateRoleRequestInput {
  """
  The role to update.
  """
  role: RoleInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeleteRoleRequestInput {
  """
  The name of the role to delete.
  """
  name: String!
}

input GetPermissionRequestInput {
  """
  The name of the permission to retrieve.
  """
  name: String!
}

input ListPermissionsRequestInput {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type ListPermissionsResponse {
  """
  The list of permissions.
  """
  permissions: [Permission!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input CreatePermissionRequestInput {
  """
  The permission to create.
  """
  permission: PermissionInput!
}

input UpdatePermissionRequestInput {
  """
  The permission to update.
  """
  permission: PermissionInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeletePermissionRequestInput {
  """
  The name of the permission to delete.
  """
  name: String!
}
