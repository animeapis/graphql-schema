# DO NOT EDIT! Generated by protoc-gen-graphql.

type AnimeshonMultimediaV1Alpha1_GraphicNovel {
  """
  The id of the graphic novel.
  """
  name: String!
  """
  The cover image of the graphic novel.
  """
  coverImage: String!
  """
  The banner image of the graphic novel.
  """
  bannerImage: String!
  """
  The title of the graphic novel localized in multiple languages.
  """
  title: [GoogleType_LocalizedText!]!
  """
  The synopsis of the graphic novel localized in multiple languages.
  """
  synopsis: [GoogleType_LocalizedText!]!
  """
  The description of the graphic novel localized in multiple languages.
  """
  description: [GoogleType_LocalizedText!]!
  """
  The type of graphic novel.
  """
  type: AnimeshonMultimediaV1Alpha1_GraphicNovel_Type!
  """
  The original release date of graphic novel.
  """
  releaseDate: GoogleType_Date
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: AnimeshonMultimediaV1Alpha1_PublishingType!
  """
  The current state of the graphic novel.
  """
  state: AnimeshonMultimediaV1Alpha1_State!
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean!
}

input AnimeshonMultimediaV1Alpha1_GraphicNovelInput {
  """
  The id of the graphic novel.
  """
  name: String
  """
  The cover image of the graphic novel.
  """
  coverImage: String
  """
  The banner image of the graphic novel.
  """
  bannerImage: String
  """
  The title of the graphic novel localized in multiple languages.
  """
  title: [GoogleType_LocalizedTextInput!]
  """
  The synopsis of the graphic novel localized in multiple languages.
  """
  synopsis: [GoogleType_LocalizedTextInput!]
  """
  The description of the graphic novel localized in multiple languages.
  """
  description: [GoogleType_LocalizedTextInput!]
  """
  The type of graphic novel.
  """
  type: AnimeshonMultimediaV1Alpha1_GraphicNovel_Type
  """
  The original release date of graphic novel.
  """
  releaseDate: GoogleType_DateInput
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: AnimeshonMultimediaV1Alpha1_PublishingType
  """
  The current state of the graphic novel.
  """
  state: AnimeshonMultimediaV1Alpha1_State
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean
}

type AnimeshonMultimediaV1Alpha1_GetGraphicNovelRequest {
  """
  The name of the graphic novel to retrieve.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_GetGraphicNovelRequestInput {
  """
  The name of the graphic novel to retrieve.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ListGraphicNovelsRequest {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Float!
  """
  The value returned from the previous call.
  """
  pageToken: String!
  """
  A filter to be applied to results.
  """
  filter: String!
}

input AnimeshonMultimediaV1Alpha1_ListGraphicNovelsRequestInput {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Float
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type AnimeshonMultimediaV1Alpha1_ListGraphicNovelsResponse {
  """
  The list of graphic novels.
  """
  graphicNovels: [AnimeshonMultimediaV1Alpha1_GraphicNovel!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

type AnimeshonMultimediaV1Alpha1_CreateGraphicNovelRequest {
  """
  The graphic novel to create.
  """
  graphicNovel: AnimeshonMultimediaV1Alpha1_GraphicNovel
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float!
}

input AnimeshonMultimediaV1Alpha1_CreateGraphicNovelRequestInput {
  """
  The graphic novel to create.
  """
  graphicNovel: AnimeshonMultimediaV1Alpha1_GraphicNovelInput
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float
}

type AnimeshonMultimediaV1Alpha1_UpdateGraphicNovelRequest {
  """
  The graphic novel to update.
  """
  graphicNovel: AnimeshonMultimediaV1Alpha1_GraphicNovel
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMask
}

input AnimeshonMultimediaV1Alpha1_UpdateGraphicNovelRequestInput {
  """
  The graphic novel to update.
  """
  graphicNovel: AnimeshonMultimediaV1Alpha1_GraphicNovelInput
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMaskInput
}

type AnimeshonMultimediaV1Alpha1_DeleteGraphicNovelRequest {
  """
  The name of the graphic novel to delete.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_DeleteGraphicNovelRequestInput {
  """
  The name of the graphic novel to delete.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ReconcileGraphicNovelsRequest {
  """
  The name of the graphic novel to reconcile.
  Use the wildcard `graphicNovels/-` to reconcile all graphic novels.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_ReconcileGraphicNovelsRequestInput {
  """
  The name of the graphic novel to reconcile.
  Use the wildcard `graphicNovels/-` to reconcile all graphic novels.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ReconcileGraphicNovelsResponse {
  _empty: Boolean
}

enum AnimeshonMultimediaV1Alpha1_GraphicNovel_Type {
  """
  The default value. This value is used if the state is omitted.
  """
  TYPE_UNSPECIFIED
  MANGA
  ONE_SHOT
  MANHUA
  MANHWA
  OEL
  WEB_COMIC
  YON_KOMA
  OTHER
}
