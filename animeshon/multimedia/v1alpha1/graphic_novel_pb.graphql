# DO NOT EDIT! Generated by protoc-gen-graphql.

type GraphicNovel {
  """
  The id of the graphic novel.
  """
  name: String!
  """
  The cover image of the graphic novel.
  """
  coverImage: String!
  """
  The banner image of the graphic novel.
  """
  bannerImage: String!
  """
  The title of the graphic novel localized in multiple languages.
  """
  title: [LocalizedText!]!
  """
  The synopsis of the graphic novel localized in multiple languages.
  """
  synopsis: [LocalizedText!]!
  """
  The description of the graphic novel localized in multiple languages.
  """
  description: [LocalizedText!]!
  """
  The type of graphic novel.
  """
  type: GraphicNovel_Type!
  """
  The original release date of graphic novel.
  """
  releaseDate: Date
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: PublishingType!
  """
  The current state of the graphic novel.
  """
  state: State!
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean!
}

input GraphicNovelInput {
  """
  The id of the graphic novel.
  """
  name: String!
  """
  The cover image of the graphic novel.
  """
  coverImage: String
  """
  The banner image of the graphic novel.
  """
  bannerImage: String
  """
  The title of the graphic novel localized in multiple languages.
  """
  title: [LocalizedTextInput!]
  """
  The synopsis of the graphic novel localized in multiple languages.
  """
  synopsis: [LocalizedTextInput!]
  """
  The description of the graphic novel localized in multiple languages.
  """
  description: [LocalizedTextInput!]
  """
  The type of graphic novel.
  """
  type: GraphicNovel_Type
  """
  The original release date of graphic novel.
  """
  releaseDate: DateInput
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: PublishingType
  """
  The current state of the graphic novel.
  """
  state: State
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean
}

input GetGraphicNovelRequestInput {
  """
  The name of the graphic novel to retrieve.
  """
  name: String!
}

input ListGraphicNovelsRequestInput {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type ListGraphicNovelsResponse {
  """
  The list of graphic novels.
  """
  graphicNovels: [GraphicNovel!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input CreateGraphicNovelRequestInput {
  """
  The graphic novel to create.
  """
  graphicNovel: GraphicNovelInput!
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float
}

input UpdateGraphicNovelRequestInput {
  """
  The graphic novel to update.
  """
  graphicNovel: GraphicNovelInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeleteGraphicNovelRequestInput {
  """
  The name of the graphic novel to delete.
  """
  name: String!
}

input ReconcileGraphicNovelsRequestInput {
  """
  The name of the graphic novel to reconcile.
  Use the wildcard `graphicNovels/-` to reconcile all graphic novels.
  """
  name: String!
}

type ReconcileGraphicNovelsResponse {
  _empty: Boolean
}

enum GraphicNovel_Type {
  """
  The default value. This value is used if the state is omitted.
  """
  TYPE_UNSPECIFIED
  MANGA
  ONE_SHOT
  MANHUA
  MANHWA
  OEL
  WEB_COMIC
  YON_KOMA
  OTHER
}
