# DO NOT EDIT! Generated by protoc-gen-graphql.

type Anime {
  """
  The id of the anime.
  """
  name: String!
  """
  The cover image of the anime.
  """
  coverImage: String!
  """
  The banner image of the anime.
  """
  bannerImage: String!
  """
  The title of the anime localized in multiple languages.
  """
  title: [LocalizedText!]!
  """
  The synopsis of the anime localized in multiple languages.
  """
  synopsis: [LocalizedText!]!
  """
  The description of the anime localized in multiple languages.
  """
  description: [LocalizedText!]!
  """
  The type of anime.
  """
  type: Anime_Type!
  """
  The original release date of anime.
  """
  releaseDate: Date
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: PublishingType!
  """
  The current state of the anime.
  """
  state: State!
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean!
}

input AnimeInput {
  """
  The id of the anime.
  """
  name: String!
  """
  The cover image of the anime.
  """
  coverImage: String
  """
  The banner image of the anime.
  """
  bannerImage: String
  """
  The title of the anime localized in multiple languages.
  """
  title: [LocalizedTextInput!]
  """
  The synopsis of the anime localized in multiple languages.
  """
  synopsis: [LocalizedTextInput!]
  """
  The description of the anime localized in multiple languages.
  """
  description: [LocalizedTextInput!]
  """
  The type of anime.
  """
  type: Anime_Type
  """
  The original release date of anime.
  """
  releaseDate: DateInput
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: PublishingType
  """
  The current state of the anime.
  """
  state: State
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean
}

input GetAnimeRequestInput {
  """
  The name of the anime to retrieve.
  """
  name: String!
}

input ListAnimesRequestInput {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type ListAnimesResponse {
  """
  The list of animes.
  """
  animes: [Anime!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input CreateAnimeRequestInput {
  """
  The anime to create.
  """
  anime: AnimeInput!
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float
}

input UpdateAnimeRequestInput {
  """
  The anime to update.
  """
  anime: AnimeInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeleteAnimeRequestInput {
  """
  The name of the anime to delete.
  """
  name: String!
}

input ReconcileAnimesRequestInput {
  """
  The name of the anime to reconcile.
  Use the wildcard `animes/-` to reconcile all animes.
  """
  name: String!
}

type ReconcileAnimesResponse {
  _empty: Boolean
}

enum Anime_Type {
  """
  The default value. This value is used if the state is omitted.
  """
  TYPE_UNSPECIFIED
  TV
  MOVIE
  OVA
  ONA
  SPECIAL
  WEB
  MUSIC_VIDEO
  OTHER
}
