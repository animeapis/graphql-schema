# DO NOT EDIT! Generated by protoc-gen-graphql.

type AnimeshonMultimediaV1Alpha1_VisualNovel {
  """
  The id of the visual novel.
  """
  name: String!
  """
  The cover image of the visual novel.
  """
  coverImage: String!
  """
  The banner image of the visual novel.
  """
  bannerImage: String!
  """
  The title of the visual novel localized in multiple languages.
  """
  title: [GoogleType_LocalizedText!]!
  """
  The synopsis of the visual novel localized in multiple languages.
  """
  synopsis: [GoogleType_LocalizedText!]!
  """
  The description of the visual novel localized in multiple languages.
  """
  description: [GoogleType_LocalizedText!]!
  """
  The type of visual novel.
  """
  type: AnimeshonMultimediaV1Alpha1_VisualNovel_Type!
  """
  The original release date of visual novel.
  """
  releaseDate: GoogleType_Date
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: AnimeshonMultimediaV1Alpha1_PublishingType!
  """
  The current state of the light novel.
  """
  state: AnimeshonMultimediaV1Alpha1_State!
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean!
  """
  The average duration of the visual novel.
  """
  length: AnimeshonMultimediaV1Alpha1_VisualNovel_PlayLength!
}

input AnimeshonMultimediaV1Alpha1_VisualNovelInput {
  """
  The id of the visual novel.
  """
  name: String
  """
  The cover image of the visual novel.
  """
  coverImage: String
  """
  The banner image of the visual novel.
  """
  bannerImage: String
  """
  The title of the visual novel localized in multiple languages.
  """
  title: [GoogleType_LocalizedTextInput!]
  """
  The synopsis of the visual novel localized in multiple languages.
  """
  synopsis: [GoogleType_LocalizedTextInput!]
  """
  The description of the visual novel localized in multiple languages.
  """
  description: [GoogleType_LocalizedTextInput!]
  """
  The type of visual novel.
  """
  type: AnimeshonMultimediaV1Alpha1_VisualNovel_Type
  """
  The original release date of visual novel.
  """
  releaseDate: GoogleType_DateInput
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: AnimeshonMultimediaV1Alpha1_PublishingType
  """
  The current state of the light novel.
  """
  state: AnimeshonMultimediaV1Alpha1_State
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean
  """
  The average duration of the visual novel.
  """
  length: AnimeshonMultimediaV1Alpha1_VisualNovel_PlayLength
}

type AnimeshonMultimediaV1Alpha1_GetVisualNovelRequest {
  """
  The name of the visual novel to retrieve.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_GetVisualNovelRequestInput {
  """
  The name of the visual novel to retrieve.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ListVisualNovelsRequest {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Float!
  """
  The value returned from the previous call.
  """
  pageToken: String!
  """
  A filter to be applied to results.
  """
  filter: String!
}

input AnimeshonMultimediaV1Alpha1_ListVisualNovelsRequestInput {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Float
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type AnimeshonMultimediaV1Alpha1_ListVisualNovelsResponse {
  """
  The list of visual novels.
  """
  visualNovels: [AnimeshonMultimediaV1Alpha1_VisualNovel!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

type AnimeshonMultimediaV1Alpha1_CreateVisualNovelRequest {
  """
  The visual novel to create.
  """
  visualNovel: AnimeshonMultimediaV1Alpha1_VisualNovel
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float!
}

input AnimeshonMultimediaV1Alpha1_CreateVisualNovelRequestInput {
  """
  The visual novel to create.
  """
  visualNovel: AnimeshonMultimediaV1Alpha1_VisualNovelInput
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float
}

type AnimeshonMultimediaV1Alpha1_UpdateVisualNovelRequest {
  """
  The visual novel to update.
  """
  visualNovel: AnimeshonMultimediaV1Alpha1_VisualNovel
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMask
}

input AnimeshonMultimediaV1Alpha1_UpdateVisualNovelRequestInput {
  """
  The visual novel to update.
  """
  visualNovel: AnimeshonMultimediaV1Alpha1_VisualNovelInput
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMaskInput
}

type AnimeshonMultimediaV1Alpha1_DeleteVisualNovelRequest {
  """
  The name of the visual novel to delete.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_DeleteVisualNovelRequestInput {
  """
  The name of the visual novel to delete.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ReconcileVisualNovelsRequest {
  """
  The name of the visual novel to reconcile.
  Use the wildcard `visualNovels/-` to reconcile all visual novels.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_ReconcileVisualNovelsRequestInput {
  """
  The name of the visual novel to reconcile.
  Use the wildcard `visualNovels/-` to reconcile all visual novels.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ReconcileVisualNovelsResponse {
  _empty: Boolean
}

enum AnimeshonMultimediaV1Alpha1_VisualNovel_Type {
  """
  The default value. This value is used if the state is omitted.
  """
  TYPE_UNSPECIFIED
}

enum AnimeshonMultimediaV1Alpha1_VisualNovel_PlayLength {
  """
  The default value. This value is used if the state is omitted.
  """
  PLAY_LENGTH_UNSPECIFIED
  VERY_SHORT
  SHORT
  MEDIUM
  LONG
  VERY_LONG
}
