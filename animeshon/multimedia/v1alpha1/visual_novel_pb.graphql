# DO NOT EDIT! Generated by protoc-gen-graphql.

type VisualNovel {
  """
  The id of the visual novel.
  """
  name: String!
  """
  The cover image of the visual novel.
  """
  coverImage: String!
  """
  The banner image of the visual novel.
  """
  bannerImage: String!
  """
  The title of the visual novel localized in multiple languages.
  """
  title: [LocalizedText!]!
  """
  The synopsis of the visual novel localized in multiple languages.
  """
  synopsis: [LocalizedText!]!
  """
  The description of the visual novel localized in multiple languages.
  """
  description: [LocalizedText!]!
  """
  The type of visual novel.
  """
  type: VisualNovel_Type!
  """
  The original release date of visual novel.
  """
  releaseDate: Date
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: PublishingType!
  """
  The current state of the light novel.
  """
  state: State!
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean!
  """
  The average duration of the visual novel.
  """
  length: VisualNovel_PlayLength!
}

input VisualNovelInput {
  """
  The id of the visual novel.
  """
  name: String!
  """
  The cover image of the visual novel.
  """
  coverImage: String
  """
  The banner image of the visual novel.
  """
  bannerImage: String
  """
  The title of the visual novel localized in multiple languages.
  """
  title: [LocalizedTextInput!]
  """
  The synopsis of the visual novel localized in multiple languages.
  """
  synopsis: [LocalizedTextInput!]
  """
  The description of the visual novel localized in multiple languages.
  """
  description: [LocalizedTextInput!]
  """
  The type of visual novel.
  """
  type: VisualNovel_Type
  """
  The original release date of visual novel.
  """
  releaseDate: DateInput
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: PublishingType
  """
  The current state of the light novel.
  """
  state: State
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean
  """
  The average duration of the visual novel.
  """
  length: VisualNovel_PlayLength
}

input GetVisualNovelRequestInput {
  """
  The name of the visual novel to retrieve.
  """
  name: String!
}

input ListVisualNovelsRequestInput {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type ListVisualNovelsResponse {
  """
  The list of visual novels.
  """
  visualNovels: [VisualNovel!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input CreateVisualNovelRequestInput {
  """
  The visual novel to create.
  """
  visualNovel: VisualNovelInput!
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float
}

input UpdateVisualNovelRequestInput {
  """
  The visual novel to update.
  """
  visualNovel: VisualNovelInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeleteVisualNovelRequestInput {
  """
  The name of the visual novel to delete.
  """
  name: String!
}

input ReconcileVisualNovelsRequestInput {
  """
  The name of the visual novel to reconcile.
  Use the wildcard `visualNovels/-` to reconcile all visual novels.
  """
  name: String!
}

type ReconcileVisualNovelsResponse {
  _empty: Boolean
}

enum VisualNovel_Type {
  """
  The default value. This value is used if the state is omitted.
  """
  TYPE_UNSPECIFIED
}

enum VisualNovel_PlayLength {
  """
  The default value. This value is used if the state is omitted.
  """
  PLAY_LENGTH_UNSPECIFIED
  VERY_SHORT
  SHORT
  MEDIUM
  LONG
  VERY_LONG
}
