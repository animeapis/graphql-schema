# DO NOT EDIT! Generated by protoc-gen-graphql.

type Chapter {
  """
  The id of the chapter.
  """
  name: String!
  """
  The cover image of the chapter.
  """
  coverImage: String!
  """
  The banner image of the chapter.
  """
  bannerImage: String!
  """
  The title of the chapter localized in multiple languages.
  """
  title: [LocalizedText!]!
  """
  The synopsis of the chapter localized in multiple languages.
  """
  synopsis: [LocalizedText!]!
  """
  The description of the chapter localized in multiple languages.
  """
  description: [LocalizedText!]!
  """
  The type of chapter.
  """
  type: Chapter_Type!
  """
  The index of chapter.
  """
  index: Int!
  """
  The original release date of chapter.
  """
  releaseDate: Date
  """
  The original page count of the chapter.
  """
  pageCount: Int!
}

input ChapterInput {
  """
  The id of the chapter.
  """
  name: String!
  """
  The cover image of the chapter.
  """
  coverImage: String
  """
  The banner image of the chapter.
  """
  bannerImage: String
  """
  The title of the chapter localized in multiple languages.
  """
  title: [LocalizedTextInput!]
  """
  The synopsis of the chapter localized in multiple languages.
  """
  synopsis: [LocalizedTextInput!]
  """
  The description of the chapter localized in multiple languages.
  """
  description: [LocalizedTextInput!]
  """
  The type of chapter.
  """
  type: Chapter_Type
  """
  The index of chapter.
  """
  index: Int
  """
  The original release date of chapter.
  """
  releaseDate: DateInput
  """
  The original page count of the chapter.
  """
  pageCount: Int
}

input GetChapterRequestInput {
  """
  The name of the chapter to retrieve.
  """
  name: String!
}

input ListChaptersRequestInput {
  """
  The parent this chapter belongs to.
  """
  parent: String!
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Int
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type ListChaptersResponse {
  """
  The list of chapters.
  """
  chapters: [Chapter!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

input CreateChapterRequestInput {
  """
  The parent this chapter belongs to.
  """
  parent: String!
  """
  The chapter to create.
  """
  chapter: ChapterInput!
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float
}

input BatchCreateChaptersRequestInput {
  """
  Individual create chapter requests for this batch.
  """
  requests: [BatchCreateChaptersRequest_RequestInput!]
  """
  The parent this batch belongs to.
  """
  parent: String!
}

input BatchCreateChaptersRequest_RequestInput {
  """
  The chapter to create.
  """
  chapter: ChapterInput!
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float
}

type BatchCreateChaptersResponse {
  """
  Individual responses to create chapter requests within the batch.
  """
  responses: [BatchCreateChaptersResponse_Response!]!
}

type BatchCreateChaptersResponse_Response {
  """
  The newly created chapter.
  """
  chapter: Chapter
  """
  If set, represents the error message for the operation.
  """
  error: Status
}

input UpdateChapterRequestInput {
  """
  The chapter to update.
  """
  chapter: ChapterInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeleteChapterRequestInput {
  """
  The name of the chapter to delete.
  """
  name: String!
}

input ReconcileChaptersRequestInput {
  parent: String!
}

type ReconcileChaptersResponse {
  _empty: Boolean
}

enum Chapter_Type {
  """
  The default value. This value is used if the state is omitted.
  """
  TYPE_UNSPECIFIED
  """
  The chapter is a regular canonical chapter.
  """
  REGULAR
  """
  The chapter is an extra chapter (e.g. specials, credits, etc.).
  """
  EXTRA
}
