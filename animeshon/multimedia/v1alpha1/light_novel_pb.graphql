# DO NOT EDIT! Generated by protoc-gen-graphql.

type AnimeshonMultimediaV1Alpha1_LightNovel {
  """
  The id of the light novel.
  """
  name: String!
  """
  The cover image of the light novel.
  """
  coverImage: String!
  """
  The banner image of the light novel.
  """
  bannerImage: String!
  """
  The title of the light novel localized in multiple languages.
  """
  title: [GoogleType_LocalizedText!]!
  """
  The synopsis of the light novel localized in multiple languages.
  """
  synopsis: [GoogleType_LocalizedText!]!
  """
  The description of the light novel localized in multiple languages.
  """
  description: [GoogleType_LocalizedText!]!
  """
  The type of light novel.
  """
  type: AnimeshonMultimediaV1Alpha1_LightNovel_Type!
  """
  The original release date of light novel.
  """
  releaseDate: GoogleType_Date
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: AnimeshonMultimediaV1Alpha1_PublishingType!
  """
  The current state of the light novel.
  """
  state: AnimeshonMultimediaV1Alpha1_State!
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean!
}

input AnimeshonMultimediaV1Alpha1_LightNovelInput {
  """
  The id of the light novel.
  """
  name: String
  """
  The cover image of the light novel.
  """
  coverImage: String
  """
  The banner image of the light novel.
  """
  bannerImage: String
  """
  The title of the light novel localized in multiple languages.
  """
  title: [GoogleType_LocalizedTextInput!]
  """
  The synopsis of the light novel localized in multiple languages.
  """
  synopsis: [GoogleType_LocalizedTextInput!]
  """
  The description of the light novel localized in multiple languages.
  """
  description: [GoogleType_LocalizedTextInput!]
  """
  The type of light novel.
  """
  type: AnimeshonMultimediaV1Alpha1_LightNovel_Type
  """
  The original release date of light novel.
  """
  releaseDate: GoogleType_DateInput
  """
  The original publishing type of this content.
  TODO: migrate this field to a more structured licensing history.
  """
  publishingType: AnimeshonMultimediaV1Alpha1_PublishingType
  """
  The current state of the light novel.
  """
  state: AnimeshonMultimediaV1Alpha1_State
  """
  Whether this content is an original work or a derivative work (parody).
  """
  original: Boolean
}

type AnimeshonMultimediaV1Alpha1_GetLightNovelRequest {
  """
  The name of the light novel to retrieve.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_GetLightNovelRequestInput {
  """
  The name of the light novel to retrieve.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ListLightNovelsRequest {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Float!
  """
  The value returned from the previous call.
  """
  pageToken: String!
  """
  A filter to be applied to results.
  """
  filter: String!
}

input AnimeshonMultimediaV1Alpha1_ListLightNovelsRequestInput {
  """
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Float
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: String
}

type AnimeshonMultimediaV1Alpha1_ListLightNovelsResponse {
  """
  The list of light novels.
  """
  lightNovels: [AnimeshonMultimediaV1Alpha1_LightNovel!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

type AnimeshonMultimediaV1Alpha1_CreateLightNovelRequest {
  """
  The light novel to create.
  """
  lightNovel: AnimeshonMultimediaV1Alpha1_LightNovel
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float!
}

input AnimeshonMultimediaV1Alpha1_CreateLightNovelRequestInput {
  """
  The light novel to create.
  """
  lightNovel: AnimeshonMultimediaV1Alpha1_LightNovelInput
  """
  An idempotent identifier to be used as static resource id.
  """
  idempotentResourceId: Float
}

type AnimeshonMultimediaV1Alpha1_UpdateLightNovelRequest {
  """
  The light novel to update.
  """
  lightNovel: AnimeshonMultimediaV1Alpha1_LightNovel
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMask
}

input AnimeshonMultimediaV1Alpha1_UpdateLightNovelRequestInput {
  """
  The light novel to update.
  """
  lightNovel: AnimeshonMultimediaV1Alpha1_LightNovelInput
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMaskInput
}

type AnimeshonMultimediaV1Alpha1_DeleteLightNovelRequest {
  """
  The name of the light novel to delete.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_DeleteLightNovelRequestInput {
  """
  The name of the light novel to delete.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ReconcileLightNovelsRequest {
  """
  The name of the light novel to reconcile.
  Use the wildcard `lightNovels/-` to reconcile all light novels.
  """
  name: String!
}

input AnimeshonMultimediaV1Alpha1_ReconcileLightNovelsRequestInput {
  """
  The name of the light novel to reconcile.
  Use the wildcard `lightNovels/-` to reconcile all light novels.
  """
  name: String
}

type AnimeshonMultimediaV1Alpha1_ReconcileLightNovelsResponse {
  _empty: Boolean
}

enum AnimeshonMultimediaV1Alpha1_LightNovel_Type {
  """
  The default value. This value is used if the state is omitted.
  """
  TYPE_UNSPECIFIED
}
