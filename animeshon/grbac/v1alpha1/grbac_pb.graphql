# DO NOT EDIT! Generated by protoc-gen-graphql.

"""
Information about the member, resource, and permission to check.
"""
type AccessTuple {
  """
  The member, or principal, whose access you want to check.
  """
  principal: String!
  """
  The full resource name that identifies the resource.
  """
  fullResourceName: String!
  """
  The IAM permission to check for the specified member and resource.
  """
  permission: String!
}

"""
Information about the member, resource, and permission to check.
"""
input AccessTupleInput {
  """
  The member, or principal, whose access you want to check.
  """
  principal: String!
  """
  The full resource name that identifies the resource.
  """
  fullResourceName: String!
  """
  The IAM permission to check for the specified member and resource.
  """
  permission: String!
}

type Resource {
  """
  The full resource name that identifies the resource.
  """
  name: String!
  """
  The full resource name that identifies the parent resource.
  """
  parent: String!
  """
  An etag for concurrency control, ignored during creation.
  """
  etag: String!
}

input ResourceInput {
  """
  The full resource name that identifies the resource.
  """
  name: String!
  """
  The full resource name that identifies the parent resource.
  """
  parent: String!
  """
  An etag for concurrency control, ignored during creation.
  """
  etag: String
}

type Subject {
  """
  The resource name of the subject.
  """
  name: String!
}

input SubjectInput {
  """
  The resource name of the subject.
  """
  name: String!
}

type Group {
  """
  The resource name of the group.
  """
  name: String!
  """
  The list of members of the group. Groups might include other groups.
  """
  members: [String!]!
  """
  An etag for concurrency control, ignored during creation.
  """
  etag: String!
}

input GroupInput {
  """
  The resource name of the group.
  """
  name: String!
  """
  The list of members of the group. Groups might include other groups.
  """
  members: [String!]
  """
  An etag for concurrency control, ignored during creation.
  """
  etag: String
}

type Permission {
  """
  The resource name of the permission.
  """
  name: String!
}

input PermissionInput {
  """
  The resource name of the permission.
  """
  name: String!
}

type Role {
  """
  The resource name of the role.
  """
  name: String!
  """
  The list of permissions granted by the role.
  """
  permissions: [String!]!
  """
  An etag for concurrency control, ignored during creation.
  """
  etag: String!
}

input RoleInput {
  """
  The resource name of the role.
  """
  name: String!
  """
  The list of permissions granted by the role.
  """
  permissions: [String!]
  """
  An etag for concurrency control, ignored during creation.
  """
  etag: String
}

input TestIamPolicyRequestInput {
  """
  The information to use for checking whether a member has a permission for a
  resource.
  """
  accessTuple: AccessTupleInput!
}

input GetResourceRequestInput {
  """
  The full resource name of the resource to retrieve.
  """
  name: String!
}

input CreateResourceRequestInput {
  """
  The resource to create.
  """
  resource: ResourceInput!
}

input TransferResourceRequestInput {
  """
  The full resource name that identifies the resource.
  """
  name: String!
  """
  The full resource name that identifies the new parent resource.
  """
  targetParent: String!
  """
  The map of substitutions to apply to the full resource name and all of its
  children.

  As an example, it might be required to change the parent of a resource from
  "users/123" to "users/678", the substitutions would then look like this:

  substitutions = {"users/123": "users/456789"}

  and the expected result would then be the following:

  from : //abc.animeapis.com/users/123/resources/210
  to   : //abc.animeapis.com/users/456789/resources/210

  The same applies if we need to transfer a resource between two parents of
  different type:

  substitutions = {"users/123": "organizations/678/teams/987"}

  and the expected result would then be the following:

  from : //abc.animeapis.com/users/123/resources/210
  to   : //abc.animeapis.com/organizations/678/teams/987/resources/210

  It is possible to apply multiple substitutions simultaneously.
  """
  substitutions: [TransferResourceRequest_SubstitutionsEntryInput!]
}

"""
`TransferResourceRequest_SubstitutionsEntryInput` represents the `substitutions` map in `animeshon.grbac.v1alpha1.TransferResourceRequest`.
"""
input TransferResourceRequest_SubstitutionsEntryInput {
  key: String
  value: String
}

input DeleteResourceRequestInput {
  """
  The full resource name that identifies the resource.
  """
  name: String!
}

input CreateSubjectRequestInput {
  """
  The subject to create.
  """
  subject: SubjectInput!
}

input DeleteSubjectRequestInput {
  """
  The subject to delete.
  """
  name: String!
}

input GetGroupRequestInput {
  """
  The name of the group to retrieve.
  """
  name: String!
}

input CreateGroupRequestInput {
  """
  The group to create.
  """
  group: GroupInput!
}

input UpdateGroupRequestInput {
  """
  The group to update.
  """
  group: GroupInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input AddGroupMemberRequestInput {
  """
  The name of the group to add a member to.
  """
  group: String!
  """
  The member to be added.
  """
  member: String!
}

input RemoveGroupMemberRequestInput {
  """
  The name of the group to remove an member from.
  """
  group: String!
  """
  The member to be removed.
  """
  member: String!
}

input DeleteGroupRequestInput {
  """
  The resource name of the group to delete.
  """
  name: String!
}

input CreatePermissionRequestInput {
  """
  The permission to create.
  """
  permission: PermissionInput!
}

input DeletePermissionRequestInput {
  """
  The resource name of the permission to delete.
  """
  name: String!
}

input GetRoleRequestInput {
  """
  The name of the role to retrieve.
  """
  name: String!
}

input CreateRoleRequestInput {
  """
  The role to create.
  """
  role: RoleInput!
}

input UpdateRoleRequestInput {
  """
  The role to update.
  """
  role: RoleInput!
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: FieldMaskInput
}

input DeleteRoleRequestInput {
  """
  The resource name of the role to delete.
  """
  name: String!
}
