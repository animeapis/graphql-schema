# DO NOT EDIT! Generated by protoc-gen-graphql.

type AnimeshonCrossrefsV1Alpha1_ImportCrossRefRequest {
  """
  Map of all options for the import
  """
  opts: [AnimeshonCrossrefsV1Alpha1_ImportCrossRefRequest_OptsEntry!]!
}

input AnimeshonCrossrefsV1Alpha1_ImportCrossRefRequestInput {
  """
  Map of all options for the import
  """
  opts: [AnimeshonCrossrefsV1Alpha1_ImportCrossRefRequest_OptsEntryInput!]
}

"""
`AnimeshonCrossrefsV1Alpha1_ImportCrossRefRequest_OptsEntry` represents the `opts` map in `animeshon.crossrefs.v1alpha1.ImportCrossRefRequest`.
"""
type AnimeshonCrossrefsV1Alpha1_ImportCrossRefRequest_OptsEntry {
  key: String!
  value: Boolean!
}

"""
`AnimeshonCrossrefsV1Alpha1_ImportCrossRefRequest_OptsEntryInput` represents the `opts` map in `animeshon.crossrefs.v1alpha1.ImportCrossRefRequest`.
"""
input AnimeshonCrossrefsV1Alpha1_ImportCrossRefRequest_OptsEntryInput {
  key: String
  value: Boolean
}

type AnimeshonCrossrefsV1Alpha1_ExportCrossRefRequest {
  target: AnimeshonCrossrefsV1Alpha1_ExportCrossRefRequest_Target!
  """
  Prefix to restrict the crossrefs to export to a specific subset
  """
  prefix: String!
}

input AnimeshonCrossrefsV1Alpha1_ExportCrossRefRequestInput {
  target: AnimeshonCrossrefsV1Alpha1_ExportCrossRefRequest_Target
  """
  Prefix to restrict the crossrefs to export to a specific subset
  """
  prefix: String
}

type AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest {
  """
  Global configuration
  """
  config: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig
  """
  Kind configurations
  """
  targetKinds: [AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_TargetKindsEntry!]!
}

input AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequestInput {
  """
  Global configuration
  """
  config: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfigInput
  """
  Kind configurations
  """
  targetKinds: [AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_TargetKindsEntryInput!]
}

type AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig {
  """
  Tollerance of the match in pct
  """
  tollerance: Float!
  """
  Map of all options for the analysis
  """
  opts: [AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig_OptsEntry!]!
}

input AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfigInput {
  """
  Tollerance of the match in pct
  """
  tollerance: Float
  """
  Map of all options for the analysis
  """
  opts: [AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig_OptsEntryInput!]
}

"""
`AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig_OptsEntry` represents the `opts` map in `animeshon.crossrefs.v1alpha1.AnalyzeCrossRefRequest.AnalyzeCrossRefConfig`.
"""
type AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig_OptsEntry {
  key: String!
  value: Boolean!
}

"""
`AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig_OptsEntryInput` represents the `opts` map in `animeshon.crossrefs.v1alpha1.AnalyzeCrossRefRequest.AnalyzeCrossRefConfig`.
"""
input AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig_OptsEntryInput {
  key: String
  value: Boolean
}

type AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefNamespaceConfig {
  """
  Namespace to analyze
  """
  namespace: String!
  """
  Optional Namespace specific configuration
  """
  config: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig
}

input AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefNamespaceConfigInput {
  """
  Namespace to analyze
  """
  namespace: String
  """
  Optional Namespace specific configuration
  """
  config: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfigInput
}

type AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfig {
  """
  Kind to analyze
  """
  targetKind: String!
  """
  Optional Target specific configuration
  """
  config: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfig
  """
  Namespace configurations
  """
  namespaces: [AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfig_NamespacesEntry!]!
}

input AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfigInput {
  """
  Kind to analyze
  """
  targetKind: String
  """
  Optional Target specific configuration
  """
  config: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefConfigInput
  """
  Namespace configurations
  """
  namespaces: [AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfig_NamespacesEntryInput!]
}

"""
`AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfig_NamespacesEntry` represents the `namespaces` map in `animeshon.crossrefs.v1alpha1.AnalyzeCrossRefRequest.AnalyzeCrossRefTargetConfig`.
"""
type AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfig_NamespacesEntry {
  key: String!
  value: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefNamespaceConfig
}

"""
`AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfig_NamespacesEntryInput` represents the `namespaces` map in `animeshon.crossrefs.v1alpha1.AnalyzeCrossRefRequest.AnalyzeCrossRefTargetConfig`.
"""
input AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfig_NamespacesEntryInput {
  key: String
  value: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefNamespaceConfigInput
}

"""
`AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_TargetKindsEntry` represents the `target_kinds` map in `animeshon.crossrefs.v1alpha1.AnalyzeCrossRefRequest`.
"""
type AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_TargetKindsEntry {
  key: String!
  value: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfig
}

"""
`AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_TargetKindsEntryInput` represents the `target_kinds` map in `animeshon.crossrefs.v1alpha1.AnalyzeCrossRefRequest`.
"""
input AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_TargetKindsEntryInput {
  key: String
  value: AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefRequest_AnalyzeCrossRefTargetConfigInput
}

type AnimeshonCrossrefsV1Alpha1_CrossRefEdge {
  name: String!
  state: Float!
}

input AnimeshonCrossrefsV1Alpha1_CrossRefEdgeInput {
  name: String
  state: Float
}

type AnimeshonCrossrefsV1Alpha1_CrossRef {
  """
  The resource name of the crossref.
  """
  name: String!
  """
  root entity which generated the crossreference.
  """
  root: String!
  """
  version control.
  """
  etag: String!
  """
  if verified, the crossreference has been generated by a trusty process or verified by an operator
  """
  verified: Boolean!
  """
  last operator which edited the crossreference
  """
  operator: String!
  """
  creation time
  """
  createTime: DateTime
  """
  update time
  """
  updateTime: DateTime
  """
  all edges of the crossreference
  """
  edges: [AnimeshonCrossrefsV1Alpha1_CrossRefEdge!]!
}

input AnimeshonCrossrefsV1Alpha1_CrossRefInput {
  """
  The resource name of the crossref.
  """
  name: String
  """
  root entity which generated the crossreference.
  """
  root: String
  """
  version control.
  """
  etag: String
  """
  if verified, the crossreference has been generated by a trusty process or verified by an operator
  """
  verified: Boolean
  """
  last operator which edited the crossreference
  """
  operator: String
  """
  creation time
  """
  createTime: DateTime
  """
  update time
  """
  updateTime: DateTime
  """
  all edges of the crossreference
  """
  edges: [AnimeshonCrossrefsV1Alpha1_CrossRefEdgeInput!]
}

"""
TODO(christian-roggia): move the universe together with all other resources.
"""
type AnimeshonCrossrefsV1Alpha1_Universe {
  """
  The resource name of the universe.
  """
  name: String!
  """
  TODO(christian-roggia): resources should be available through protobuf
  messages.
  """
  payload: String!
}

"""
TODO(christian-roggia): move the universe together with all other resources.
"""
input AnimeshonCrossrefsV1Alpha1_UniverseInput {
  """
  The resource name of the universe.
  """
  name: String
  """
  TODO(christian-roggia): resources should be available through protobuf
  messages.
  """
  payload: String
}

"""
Represents the metadata of the long-running operation.
"""
type AnimeshonCrossrefsV1Alpha1_OperationMetadata {
  """
  Output only. The time the operation was created.
  """
  createTime: DateTime
  """
  Output only. The time the operation finished running.
  """
  endTime: DateTime
  """
  Output only. Server-defined resource path for the target of the operation.
  """
  target: String!
  """
  Output only. Name of the verb executed by the operation.
  """
  verb: String!
  """
  Output only. Human-readable status of the operation, if any.
  """
  statusMessage: String!
  """
  Output only. Identifies whether the user has requested cancellation
  of the operation. Operations that have successfully been cancelled
  have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
  corresponding to `Code.CANCELLED`.
  """
  requestedCancellation: Boolean!
  """
  Output only. API version used to start the operation.
  """
  apiVersion: String!
  """
  Output only.
  """
  stepCount: Float!
  """
  Output only.
  """
  stepProgress: Float!
  """
  Output only.
  """
  itemCount: Float!
  """
  Output only.
  """
  itemProgress: Float!
}

type AnimeshonCrossrefsV1Alpha1_GetCrossRefRequest {
  """
  The resource name of the requested crossref.
  """
  name: String!
}

input AnimeshonCrossrefsV1Alpha1_GetCrossRefRequestInput {
  """
  The resource name of the requested crossref.
  """
  name: String
}

type AnimeshonCrossrefsV1Alpha1_CreateCrossRefRequest {
  crossref: AnimeshonCrossrefsV1Alpha1_CrossRef
}

input AnimeshonCrossrefsV1Alpha1_CreateCrossRefRequestInput {
  crossref: AnimeshonCrossrefsV1Alpha1_CrossRefInput
}

type AnimeshonCrossrefsV1Alpha1_BatchCreateCrossRefsRequest {
  crossrefs: [AnimeshonCrossrefsV1Alpha1_CrossRef!]!
}

input AnimeshonCrossrefsV1Alpha1_BatchCreateCrossRefsRequestInput {
  crossrefs: [AnimeshonCrossrefsV1Alpha1_CrossRefInput!]
}

type AnimeshonCrossrefsV1Alpha1_UpdateCrossRefRequest {
  """
  The crossref to update.
  """
  crossref: AnimeshonCrossrefsV1Alpha1_CrossRef
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMask
}

input AnimeshonCrossrefsV1Alpha1_UpdateCrossRefRequestInput {
  """
  The crossref to update.
  """
  crossref: AnimeshonCrossrefsV1Alpha1_CrossRefInput
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMaskInput
}

type AnimeshonCrossrefsV1Alpha1_UpdateCrossRefResponse {
  """
  All CrossRef involved in the update
  """
  crossrefs: [AnimeshonCrossrefsV1Alpha1_CrossRef!]!
}

type AnimeshonCrossrefsV1Alpha1_CrossRefsFilterRequest {
  """
  specifies the prefix of the CrossRefs name to search in
  """
  prefix: String!
  """
  if true only crossreferences with pendings are returned
  """
  pendingonly: Boolean!
}

input AnimeshonCrossrefsV1Alpha1_CrossRefsFilterRequestInput {
  """
  specifies the prefix of the CrossRefs name to search in
  """
  prefix: String
  """
  if true only crossreferences with pendings are returned
  """
  pendingonly: Boolean
}

type AnimeshonCrossrefsV1Alpha1_ListCrossRefsRequest {
  """
  The maximum number of users to return. Server may return fewer users
  than requested. 
  The maximum page_size is 100
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Float!
  """
  The value returned from the previous call.
  """
  pageToken: String!
  """
  A filter to be applied to results.
  """
  filter: AnimeshonCrossrefsV1Alpha1_CrossRefsFilterRequest
}

input AnimeshonCrossrefsV1Alpha1_ListCrossRefsRequestInput {
  """
  The maximum number of users to return. Server may return fewer users
  than requested. 
  The maximum page_size is 100
  If unspecified, server will pick an appropriate default.
  """
  pageSize: Float
  """
  The value returned from the previous call.
  """
  pageToken: String
  """
  A filter to be applied to results.
  """
  filter: AnimeshonCrossrefsV1Alpha1_CrossRefsFilterRequestInput
}

type AnimeshonCrossrefsV1Alpha1_CountCrossRefsRequest {
  """
  A filter to be applied to results.
  """
  filter: AnimeshonCrossrefsV1Alpha1_CrossRefsFilterRequest
}

input AnimeshonCrossrefsV1Alpha1_CountCrossRefsRequestInput {
  """
  A filter to be applied to results.
  """
  filter: AnimeshonCrossrefsV1Alpha1_CrossRefsFilterRequestInput
}

type AnimeshonCrossrefsV1Alpha1_BatchCreateCrossRefsResponse {
  """
  The list of crossrefs to create.
  """
  crossrefs: [AnimeshonCrossrefsV1Alpha1_CrossRef!]!
}

type AnimeshonCrossrefsV1Alpha1_ListCrossRefsResponse {
  """
  The list of crossrefs.
  """
  crossrefs: [AnimeshonCrossrefsV1Alpha1_CrossRef!]!
  """
  A token to retrieve next page of results.
  """
  nextPageToken: String!
}

type AnimeshonCrossrefsV1Alpha1_CountCrossRefsResponse {
  count: Float!
}

type AnimeshonCrossrefsV1Alpha1_GetUniverseRequest {
  """
  The resource name of the requested universe.
  """
  name: String!
}

input AnimeshonCrossrefsV1Alpha1_GetUniverseRequestInput {
  """
  The resource name of the requested universe.
  """
  name: String
}

type AnimeshonCrossrefsV1Alpha1_UpdateUniverseRequest {
  """
  The universe to update.
  """
  universe: AnimeshonCrossrefsV1Alpha1_Universe
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMask
}

input AnimeshonCrossrefsV1Alpha1_UpdateUniverseRequestInput {
  """
  The universe to update.
  """
  universe: AnimeshonCrossrefsV1Alpha1_UniverseInput
  """
  The field mask to determine which fields are to be updated. If empty, the
  server will assume all fields are to be updated.
  """
  updateMask: GoogleProtobuf_FieldMaskInput
}

type AnimeshonCrossrefsV1Alpha1_ExpandUniverseRequest {
  """
  The universe to expand.
  """
  name: String!
  """
  The maximum depth to expand.
  """
  depthLimit: Float!
  """
  The filter to use. Accepted values are CONTENT and CHARACTER.
  """
  filter: String!
}

input AnimeshonCrossrefsV1Alpha1_ExpandUniverseRequestInput {
  """
  The universe to expand.
  """
  name: String
  """
  The maximum depth to expand.
  """
  depthLimit: Float
  """
  The filter to use. Accepted values are CONTENT and CHARACTER.
  """
  filter: String
}

type AnimeshonCrossrefsV1Alpha1_ExpandUniverseResponse {
  """
  The resource name of the requested universe.
  """
  name: String!
  """
  TODO(christian-roggia): resources should be available through protobuf
  messages.
  """
  payload: String!
}

type AnimeshonCrossrefsV1Alpha1_GetWormholeRequest {
  name: String!
}

input AnimeshonCrossrefsV1Alpha1_GetWormholeRequestInput {
  name: String
}

type AnimeshonCrossrefsV1Alpha1_ListWormholeCrossRefsRequest {
  name: String!
  """
  search wormhole entity in approved edges
  """
  withapproved: Boolean!
  """
  search wormhole entity in pending edges
  """
  withpending: Boolean!
  """
  search wormhole entity in partial edges
  """
  withpartial: Boolean!
  """
  search wormhole entity in rejected edges
  """
  withrejected: Boolean!
  """
  list of CrossRefs to exclude
  """
  crossrefsexclusion: [String!]!
  """
  prefix of the CrossRefs name to search
  """
  prefix: String!
}

input AnimeshonCrossrefsV1Alpha1_ListWormholeCrossRefsRequestInput {
  name: String
  """
  search wormhole entity in approved edges
  """
  withapproved: Boolean
  """
  search wormhole entity in pending edges
  """
  withpending: Boolean
  """
  search wormhole entity in partial edges
  """
  withpartial: Boolean
  """
  search wormhole entity in rejected edges
  """
  withrejected: Boolean
  """
  list of CrossRefs to exclude
  """
  crossrefsexclusion: [String!]
  """
  prefix of the CrossRefs name to search
  """
  prefix: String
}

type AnimeshonCrossrefsV1Alpha1_ListWormholeCrossRefsResponse {
  """
  The list of crossrefs.
  """
  crossrefs: [AnimeshonCrossrefsV1Alpha1_CrossRef!]!
}

type AnimeshonCrossrefsV1Alpha1_Wormhole {
  name: String!
  """
  The names of te content
  """
  names: [AnimeshonCrossrefsV1Alpha1_Wormhole_Text!]!
  """
  The aliases of te content
  """
  aliases: [AnimeshonCrossrefsV1Alpha1_Wormhole_Text!]!
  """
  raw bytes of image
  """
  image: String!
  """
  url of the image
  """
  imageUrl: String!
  """
  type of the content
  """
  type: String!
  """
  subtype of the content
  """
  subtype: String!
  """
  external url of the content
  """
  externalUrl: String!
  """
  type of publication
  """
  publishingType: String!
  """
  the content is parody of another content
  """
  isParody: Boolean!
  """
  identifier
  """
  identifier: String!
  """
  most significant date
  """
  date: DateTime
  """
  parent's resource name
  useful for chapters and episodes to know which content it refers
  """
  parentName: String!
  """
  prant external url
  """
  parentExternalUrl: String!
}

type AnimeshonCrossrefsV1Alpha1_Wormhole_Text {
  text: String!
  localization: String!
}

"""
TODO(christian-roggia): this is a workaround to solve the issue of GAPIC
CLI where broken code is generated if google.protobuf.Empty is used in the
response_type of longrunning operations.
"""
type AnimeshonCrossrefsV1Alpha1_AnalyzeCrossRefsResponse {
  _empty: Boolean
}

type AnimeshonCrossrefsV1Alpha1_ImportCrossRefsResponse {
  _empty: Boolean
}

type AnimeshonCrossrefsV1Alpha1_ExportCrossRefsResponse {
  _empty: Boolean
}

type AnimeshonCrossrefsV1Alpha1_AnalyzeParodiesResponse {
  _empty: Boolean
}

type AnimeshonCrossrefsV1Alpha1_InitializeCrossRefsResponse {
  _empty: Boolean
}

type AnimeshonCrossrefsV1Alpha1_ExportParodiesResponse {
  _empty: Boolean
}

"""
Determine the target of the export.
Full means storage + migration
Storage means only persinstent stogare
Migration means notify the migrato to perform the data consolidation
"""
enum AnimeshonCrossrefsV1Alpha1_ExportCrossRefRequest_Target {
  FULL
  STORAGE
  MIGRATOR
}
